{"version":3,"file":"static/js/153.67f7277f.chunk.js","mappings":"wJAEaA,E,QAAaC,GAAAA,IAAH,s3DAuDC,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,WAAWC,KAAlC,IAChB,SAAAJ,GAAK,OAAIA,EAAMC,MAAMC,OAAOG,eAAeC,OAAtC,IAGC,SAAAN,GAAK,OAAIA,EAAMC,MAAMM,WAAWC,MAA3B,IACP,SAAAR,GAAK,OAAIA,EAAMC,MAAMQ,UAAUC,CAA1B,IAaL,SAAAV,GAAK,OAAIA,EAAMC,MAAMQ,UAAUC,CAA1B,IACH,SAAAV,GAAK,OAAIA,EAAMC,MAAMM,WAAWC,MAA3B,IAGX,SAAAR,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,WAAWQ,OAAlC,IAcM,SAAAX,GAAK,OACvBA,EAAMC,MAAMC,OAAOG,eAAeO,iBADX,I,oBClE7B,EAtB0B,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,KAAyB,IAAnBC,KAAAA,OAAmB,MAAZ,MAAY,EAE5CC,EAA8BF,EAA9BE,QAASC,EAAqBH,EAArBG,MAAOC,EAAcJ,EAAdI,UAClBC,EAAa,IAAIC,KAAKF,GAAWG,UAEjCC,GADY,IAAIF,MAAOC,UACLF,EAExB,OACE,UAACpB,EAAD,YACE,gBAAKwB,IAAKP,EAASQ,IAAKP,EAAOQ,MAAO,IAAKC,OAAQ,MAClDJ,EAAM,IACL,gBAAKK,UAAU,SAAf,UACE,wBAAKZ,OAGT,gBAAKY,UAAU,UAAf,UACE,eAAIA,UAAU,QAAd,SAAuBV,QAI9B,C,gFCtBYW,GAAO5B,E,QAAAA,IAAO6B,EAAAA,GAAP7B,CAAH,iD,yGCDJ8B,EAAoB9B,EAAAA,GAAAA,IAAH,4LASjB+B,EAAsB/B,EAAAA,GAAAA,IAAH,8qBAKhB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAO6B,WAAWC,EAAlC,IAcN,SAAAhC,GAAK,OAAIA,EAAMC,MAAMC,OAAO6B,WAAWjB,IAAlC,IAKF,SAAAd,GAAK,OAAIA,EAAMC,MAAMC,OAAO6B,WAAWE,WAAlC,IAaVC,EAAanC,EAAAA,GAAAA,OAAH,iUAMZ,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAO6B,WAAWjB,IAAlC,IACA,SAAAd,GAAK,OACjBA,EAAMmC,OAAN,WACO,SAAAnC,GAAK,OAAIA,EAAMC,MAAMC,OAAO6B,WAAWK,QAAlC,IACR,aAHa,IAUH,SAAApC,GAAK,OAAIA,EAAMC,MAAMC,OAAO6B,WAAWK,QAAlC,IAIVC,EAAStC,EAAAA,GAAAA,IAAH,iN,oBC3DNuC,EAAiB,SAAC,GAKxB,IAJLC,EAII,EAJJA,aACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,YACAC,EACI,EADJA,iBAKMC,EAAwB,SAAAC,GAF5BC,EAAAA,GAAAA,cAIAH,EAAiBE,EAClB,EACD,OACE,SAACf,EAAD,WACE,SAACC,EAAD,WACE,SAAC,IAAD,CACEgB,MAAON,EACPO,SAAUR,EACVS,QAASP,EACTQ,SAAUP,EACVQ,UAAU,SAAChB,EAAD,UAAa,MACvBiB,UAAU,SAACjB,EAAD,UAAa,MACvBkB,WAAY,SAACR,EAAMS,EAAMC,GACvB,MAAa,SAATD,GAEA,SAACnB,EAAD,CACEqB,QAAS,kBAAMZ,EAAsBC,EAA5B,EACTT,OAAQmB,EAAQtD,MAAMmC,OAFxB,SAIGS,IAIM,SAATS,GAGS,SAATA,EAFKC,GAKF,SAACjB,EAAD,GACR,OAKV,C,uMChDYmB,GAAezD,EAAAA,EAAAA,IAAO0D,EAAAA,EAAP1D,EAAa,kBAAgB,CACvD,uBAAwB,CACtB2D,gBAFqC,EAAGzD,MAEjBC,OAAOG,eAAesD,YAFR,IAM5BC,GAAwB7D,EAAAA,EAAAA,IAAO8D,EAAAA,GAAP9D,CAAH,iOAgBrB+D,GAA8B/D,EAAAA,EAAAA,IAAOgE,EAAAA,GAAPhE,CAAH,oOAgB3BiE,GAA8BjE,EAAAA,EAAAA,IAAO8D,EAAAA,GAAP9D,CAAH,uOAgB3BkE,EAAalE,EAAAA,GAAAA,IAAH,saAmBVmE,EAAoBnE,EAAAA,GAAAA,IAAH,uHAOjBoE,EAAepE,EAAAA,GAAAA,KAAH,8aAER,SAAAC,GAAK,OAAIA,EAAMC,MAAMM,WAAW6D,QAA3B,IAEX,SAAApE,GAAK,OAAIA,EAAMC,MAAMC,OAAOG,eAAeW,KAAtC,IAKD,SAAAhB,GAAK,OAAIA,EAAMC,MAAMQ,UAAU4D,GAA1B,IASH,SAAArE,GAAK,OAAIA,EAAMC,MAAMQ,UAAU6D,IAA1B,IAKhBC,GAAUC,EAAAA,EAAAA,IAAH,uJAWAC,EAAiB1E,EAAAA,GAAAA,KAAH,iKAEZwE,GAIM,gBAAGG,EAAH,EAAGA,MAAH,gBAAkB,GAAMA,EAAxB,QAGRC,GAAc5E,EAAAA,EAAAA,IAAO6E,EAAAA,EAAP7E,CAAH,uUAGb,SAAAC,GAAK,OACZA,EAAMC,MAAMC,OAAOG,eAAewE,gBADtB,IAIC,SAAA7E,GAAK,OAAIA,EAAMC,MAAMM,WAAWuE,OAA3B,IAET,SAAA9E,GAAK,OACZA,EAAMC,MAAMC,OAAOG,eAAe0E,qBADtB,I,oBC5ILC,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,WAAWA,UAArB,ECAtBC,EAA8B,SAAAF,GAAK,OAAIA,EAAMG,sBAAsBC,gBAAhC,EACnCC,EAAyB,SAAAL,GAAK,OAAIA,EAAMG,sBAAsBG,SAAhC,E,sECCrCC,EAAS,CACbC,SAAU,CACRjE,MAAO,QACPC,OAAQ,QACRiE,OAAQ,OACRC,YAAa,MACbjC,gBAAiB,oBACjBkC,UAAW,SAEbC,IAAK,CACHC,QAAS,SAIAC,EAAmB,WAC9B,IAAMC,GAAWC,EAAAA,EAAAA,GAAc,qBACzBC,GAAWD,EAAAA,EAAAA,GAAc,6CAC3BE,EAAY,GAiBhB,OAfEA,EADEH,EACU,EAAC,SAACI,EAAA,EAAD,CAAkBC,MAAOb,EAAOC,UAAjB,IACnBS,EACG,EACV,SAACE,EAAA,EAAD,CAAkBC,MAAOb,EAAOC,UAAjB,IACf,SAACW,EAAA,EAAD,CAAkBC,MAAOb,EAAOC,UAAjB,IAGL,EACV,SAACW,EAAA,EAAD,CAAkBC,MAAOb,EAAOC,UAAjB,IACf,SAACW,EAAA,EAAD,CAAkBC,MAAOb,EAAOC,UAAjB,IACf,SAACW,EAAA,EAAD,CAAkBC,MAAOb,EAAOC,UAAjB,IACf,SAACW,EAAA,EAAD,CAAkBC,MAAOb,EAAOC,UAAjB,KAKjB,0BACE,gBAAKY,MAAOb,EAAOK,IAAnB,SAAyBM,KAG9B,EC8GD,EApHmB,WAAO,IAAD,IACvB,GAAsCG,EAAAA,EAAAA,UAAS,GAA/C,eAAO7D,EAAP,KAAoB8D,EAApB,KACsBC,GAASC,EAAAA,EAAAA,MAAvBC,aACFC,GAAWC,EAAAA,EAAAA,eACXC,EAAW,WAAGC,EAAAA,EAAAA,aAAYC,EAAAA,UAAf,iBAAG,EAChBC,KAAI,qBAAGC,GAAH,WADS,aAAG,EAEhBC,OACEC,GAAsBL,EAAAA,EAAAA,aAAY9B,GAClCoC,GAAgBN,EAAAA,EAAAA,aAAY3B,GAC5BkC,EAASD,EACTE,GAASR,EAAAA,EAAAA,aAAYxB,GAErB9C,EAAa4E,EAAcG,OAAS,EAAIH,EAAc,GAAGI,WAAa,GAK5EC,EAAAA,EAAAA,YAAU,WACRlB,EAAe,EAChB,GAAE,CAACC,KAEJiB,EAAAA,EAAAA,YAAU,WACJZ,IAA0B,OAAXA,QAAW,IAAXA,OAAA,EAAAA,EAAaU,QAAS,GAElCZ,GAASe,EAAAA,EAAAA,KACjB,GAAE,CAACf,EAAUE,KAEdY,EAAAA,EAAAA,YAAU,WACRd,GAASgB,EAAAA,EAAAA,GAAqB,CAAEjB,aAAcF,EAAM5D,KAAMH,IAC3D,GAAE,CAAC+D,EAAMG,EAAUlE,IAEpB,IClEyBmF,EAAMC,EDkEzB3C,GClEyB2C,EDkEYV,GClElBS,EDkEKf,KChEd,OAAJe,QAAI,IAAJA,OAAA,EAAAA,EAAML,QAAS,EACZK,EAEKC,GD+DdC,EAAgB5C,EAAW6C,WAAU,SAAAlH,GACzC,OAAOA,EAAKmH,gBAAkBxB,EAAKwB,aACpC,IAsBD,OACE,SAACC,EAAA,EAAD,WACE,iCACE,UAAC/D,EAAD,YACE,SAACN,EAAD,KACA,SAAC,EAAD,KACA,SAACI,EAAD,KACA,SAACG,EAAD,UATa,aAUG+D,MAAM,IAAIlB,KAAI,SAACmB,EAAQzD,GAAT,OAC1B,SAACD,EAAD,CAA4BC,MAAOA,EAAnC,SACGyD,GADkBzD,EADK,UAOhC,SAAC0D,EAAA,EAAD,CAAKC,GAAI,CAAEC,aAAc,EAAGC,YAAa,WAAzC,UACE,SAAC/E,EAAD,CACEgF,MAAOV,EACP,aAAW,qBACXW,QAAQ,aACRC,cAAc,OAJhB,SAMGxD,EAAW8B,KAAI,SAAAR,GACd,OACE,SAAC7B,EAAD,CACEgE,MAAOnC,EAEPoC,UAAWjH,EAAAA,EACXkH,GAAE,sBAAiBrC,IAFdA,EAKV,SAGL,SAACvC,EAAD,UACGqD,GAAS,SAACvB,EAAD,IAvDD,SAAAsB,GACf,OAAKA,GAKH,8BACGA,EAAOL,KAAI,SAAAnG,GACV,OACE,SAAC,IAAD,CAAMgI,GAAE,kBAAahI,EAAKoG,KAA1B,UACE,SAAC6B,EAAA,EAAD,CAA2BjI,KAAMA,GAAhBA,EAAKoG,MAG3B,OAXI,wDAcV,CAuCwC8B,CAAS1B,KAE3C7E,EAAa,IACZ,gBACE6D,MAAO,CACL2C,aAAc,QACd,4BAA6B,CAC3BA,aAAc,UAJpB,UAQE,SAAC,IAAD,CACExG,WAAYA,EACZD,aA9FS,EA+FTE,YAAaA,EACbC,iBA9Fa,SAAAE,GACvB2D,EAAe3D,EAChB,UAmGF,EEhJD,EAHuB,WACrB,OAAO,SAAC,EAAD,GACR,C,8ECJM,IAAMqG,EAAmB,SAAAhE,GAAK,OACnCA,EAAMiE,eAAeA,eAAeC,MADD,EAGxBpC,EAAoB,SAAA9B,GAAK,OACpCA,EAAMiE,eAAeA,eAAeE,iBADA,C","sources":["components/CardRecipe/CardRecipe.styled.jsx","components/CardRecipe/CardRecipe.jsx","components/Categories/CategoriesMUI.styled.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","components/Categories/Category.styled.jsx","redux/recipes/selectors/selectCategoryList.js","redux/recipes/selectors/selectRecipeByCategoryName.js","components/Categories/CategoryContentLoad.jsx","components/Categories/Categories.jsx","components/Categories/Helpers/CheckCat.jsx","page/CategoriesPage.jsx","redux/recipes/selectors/selectCategoriesMain.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const RecipeCard = styled.div`\n  position: relative;\n  width: 200px;\n  border-radius: 8px;\n  overflow: hidden;\n  min-width: 343px;\n  height: 323px;\n  transition-duration: 2000ms;\n  @media (min-width: 768px) {\n    min-width: 336px;\n  }\n  @media (min-width: 1440px) {\n    min-width: 300px;\n  }\n  .remark {\n    position: absolute;\n    top: 8px;\n    right: 8px;\n    width: 60px;\n    height: 30px;\n    background-color: rgb(139, 170, 54);\n    color: white;\n    border-radius: 8px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  img {\n    width: 343px;\n    height: 323px;\n    object-fit: cover;\n\n    @media (min-width: 768px) {\n      width: 336px;\n    }\n    @media (min-width: 1440px) {\n      max-width: 100%;\n    }\n  }\n\n  &:hover {\n    opacity: 1;\n    scale: 1.03;\n    transition-duration: 2000ms;\n  }\n\n  .overlay {\n    position: absolute;\n    bottom: 24px;\n    border-radius: 8px;\n    left: 16px;\n    right: 16px;\n    padding: 16px;\n    background-image: none;\n    background-color: ${props => props.theme.colors.cardRecipe.bgbtn};\n    color: ${props => props.theme.colors.categoriesPage.overlay};\n    font-family: 'Poppins';\n    font-style: normal;\n    font-weight: ${props => props.theme.fontWeight.medium};\n    font-size: ${props => props.theme.fontSizes.m};\n    line-height: 20px;\n    opacity: 1;\n    transition-duration: 2000ms;\n  }\n\n  &:hover .overlay {\n    z-index: 2;\n    background-image: linear-gradient(to left, #a8c163, transparent);\n    /* transition: background-image 2s ease-in-out; */\n  }\n\n  .title {\n    font-size: ${props => props.theme.fontSizes.m};\n    font-weight: ${props => props.theme.fontWeight.medium};\n    margin: 0;\n    transition-duration: 2000ms;\n    color: ${props => props.theme.colors.cardRecipe.textBtn};\n  }\n\n  &:hover .title {\n    scale: 1.03;\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: ${props =>\n      props.theme.colors.categoriesPage.overlayHoverAfter};\n    z-index: 1;\n    opacity: 0;\n    transition: opacity 500ms ease;\n  }\n\n  &:hover::after {\n    opacity: 1;\n    transition: opacity 500ms ease;\n  }\n`;\n","import { RecipeCard } from './CardRecipe.styled';\nimport * as React from 'react';\n\n// if you want to try this card - you can load it in some component(like WelcomePageComponent) and put in props item with name and image way\n\nexport const CardRecipe = ({ item, text = 'New' }) => {\n  // Card use in categories Soyummy, Categories, Search\n  const { preview, title, createdAt } = item;\n  const recipeDate = new Date(createdAt).getDate();\n  const todayDate = new Date().getDate();\n  const res = todayDate - recipeDate;\n\n  return (\n    <RecipeCard>\n      <img src={preview} alt={title} width={350} height={350} />\n      {res < 8 && (\n        <div className=\"remark\">\n          <h3>{text}</h3>\n        </div>\n      )}\n      <div className=\"overlay\">\n        <h2 className=\"title\">{title}</h2>\n      </div>\n    </RecipeCard>\n  );\n};\n\nexport default CardRecipe;\n","import { NavLink } from 'react-router-dom';\nimport { styled } from '@mui/material/styles';\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n`;\n","import styled from 'styled-components';\n\nexport const ContainerForAline = styled.div`\n  display: flex;\n  justify-content: center;\n  /* padding: 20px; */\n  /* margin-bottom: 200px;\n  @media (min-width: 768px) {\n    margin-bottom: 100px;\n  } */\n`;\nexport const PaginationContainer = styled.div`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  height: 55px;\n  background: ${props => props.theme.colors.pagination.bg};\n  box-shadow: rgba(135, 135, 135, 0.2) 0px 0px 4px 6px;\n  border-radius: 26px;\n  margin-left: auto;\n  margin-right: auto;\n  ul.rc-pagination {\n    display: flex;\n  }\n\n  li.rc-pagination-jump-next,\n  li.rc-pagination-jump-prev {\n    :after {\n      display: block;\n      content: '•••';\n      color: ${props => props.theme.colors.pagination.text};\n    }\n  }\n\n  li.rc-pagination-item-active {\n    background: ${props => props.theme.colors.pagination.bgActiveBtn};\n    border-radius: 50%;\n\n    margin-left: 3px;\n    margin-right: 3px;\n  }\n\n  li div {\n    background: transparent;\n    height: 9px;\n  }\n`;\n\nexport const PageButton = styled.button`\n  cursor: pointer;\n  width: 28px;\n  height: 27px;\n  left: 72px;\n  top: 14px;\n  color: ${props => props.theme.colors.pagination.text};\n  background: ${props =>\n    props.active\n      ? `${props => props.theme.colors.pagination.bgAccent}`\n      : 'transparent'};\n  box-shadow: 0px 0px 0px rgba(0, 0, 0, 0);\n  border: none;\n  border-radius: 50%;\n  /* margin-left: 3px; */\n  /* margin-right: 3px; */\n  &:hover {\n    background: ${props => props.theme.colors.pagination.bgAccent};\n  }\n`;\n\nexport const Slider = styled.div`\n  width: 15px;\n  height: 15px;\n  left: 7.34%;\n  right: 90.83%;\n  top: 36.36%;\n  bottom: 36.36%;\n  background: rgba(169, 169, 169, 0.73);\n  transform: matrix(-1, 0, 0, 1, 0, 0);\n`;\n","import Pagination from 'rc-pagination';\nimport * as React from 'react';\nimport {\n  PaginationContainer,\n  PageButton,\n  Slider,\n  ContainerForAline,\n} from './Pagination.styled';\nimport { animateScroll } from 'react-scroll';\n\nexport const PagePagination = ({\n  cardsPerPage,\n  totalPages,\n  currentPage,\n  handlePageChange,\n}) => {\n  const scrollToTop = () => {\n    animateScroll.scrollToTop();\n  };\n  const handlePageButtonClick = page => {\n    scrollToTop();\n    handlePageChange(page);\n  };\n  return (\n    <ContainerForAline>\n      <PaginationContainer>\n        <Pagination\n          total={totalPages}\n          pageSize={cardsPerPage}\n          current={currentPage}\n          onChange={handlePageChange}\n          prevIcon={<PageButton>{'<'}</PageButton>}\n          nextIcon={<PageButton>{'>'}</PageButton>}\n          itemRender={(page, type, element) => {\n            if (type === 'page') {\n              return (\n                <PageButton\n                  onClick={() => handlePageButtonClick(page)}\n                  active={element.props.active}\n                >\n                  {page}\n                </PageButton>\n              );\n            }\n            if (type === 'prev') {\n              return element;\n            }\n            if (type === 'next') {\n              return element;\n            }\n            return <Slider />;\n          }}\n        />\n      </PaginationContainer>\n    </ContainerForAline>\n  );\n};\n","import styled, { keyframes } from 'styled-components';\nimport {\n  DefaultSquare,\n  DefaultSquareСircle,\n} from '../../components/constants/DefaultStyleComponents/DefaultStyleComponents';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\n\nexport const CategoryTabs = styled(Tabs)(({ theme }) => ({\n  '& .MuiTabs-indicator': {\n    backgroundColor: theme.colors.categoriesPage.lineActive,\n  },\n}));\n\nexport const CategoryDefaultSquare = styled(DefaultSquare)`\n  position: absolute;\n  left: 104px;\n  top: -26px;\n\n  @media (min-width: 768px) {\n    left: 187px;\n    top: -32px;\n  }\n\n  @media (min-width: 1440px) {\n    left: 239px;\n    top: -29px;\n  }\n`;\n\nexport const CategoryDefaultSquareСircle = styled(DefaultSquareСircle)`\n  position: absolute;\n  left: 247px;\n  bottom: 0px;\n\n  @media (min-width: 768px) {\n    left: 405px;\n    bottom: 0px;\n  }\n\n  @media (min-width: 1440px) {\n    left: 707px;\n    bottom: 0px;\n  }\n`;\n\nexport const CategoryDefaultSquareSecond = styled(DefaultSquare)`\n  position: absolute;\n  right: -180px;\n  top: -16px;\n\n  @media (min-width: 768px) {\n    right: -520px;\n    top: -19px;\n  }\n\n  @media (min-width: 1440px) {\n    right: -911px;\n    top: -16px;\n  }\n`;\n\nexport const MyTabPanel = styled.div`\n  margin-top: 50px;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  justify-items: center;\n  margin-bottom: 40px;\n  gap: 28px;\n  @media (min-width: 768px) {\n    grid-template-columns: repeat(2, 1fr);\n    gap: 14px;\n    margin-bottom: 50px;\n  }\n\n  @media (min-width: 1440px) {\n    grid-template-columns: repeat(4, 1fr);\n    grid-row-gap: 100px;\n  }\n`;\n\nexport const CategoryContainer = styled.div`\n  position: relative;\n  display: inline-block;\n  margin-bottom: 83px;\n  margin-top: 100px;\n`;\n\nexport const CategoryText = styled.span`\n  font-style: normal;\n  font-weight: ${props => props.theme.fontWeight.semiBold};\n  line-height: 28px;\n  color: ${props => props.theme.colors.categoriesPage.title};\n\n  letter-spacing: -0.02em;\n  font-feature-settings: 'liga';\n  font-family: 'Poppins';\n  font-size: ${props => props.theme.fontSizes.xxl};\n  position: relative;\n  display: inline-block;\n  @media (min-width: 768px) {\n    font-size: 32px;\n    line-height: 32px;\n  }\n\n  @media (min-width: 1440px) {\n    font-size: ${props => props.theme.fontSizes.xxxl};\n    line-height: 44px;\n  }\n`;\n\nconst animate = keyframes`\n  0% {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\n\nexport const AnimatedLetter = styled.span`\n  display: inline-block;\n  animation: ${animate} 1.5s ease-in-out;\n  animation-fill-mode: forwards;\n  opacity: 0;\n\n  animation-delay: ${({ index }) => `${0.1 * index}s`};\n`;\n\nexport const CategoryTab = styled(Tab)`\n  font-size: 14px !important;\n  font-family: 'Poppins' !important;\n  color: ${props =>\n    props.theme.colors.categoriesPage.linkNameCategory} !important;\n  padding: 27px;\n  text-transform: none !important;\n  font-weight: ${props => props.theme.fontWeight.regular} !important;\n  &.Mui-selected {\n    color: ${props =>\n      props.theme.colors.categoriesPage.linkNameCategoryHover} !important;\n  }\n  @media (min-width: 768px) {\n    font-size: 18px !important;\n  }\n`;\n","export const selectCategory = state => state.categories.categories;","export const selectRecipesByCategoryName = state => state.recipeByCategorySlice.recipeByCategory;\nexport const selectRecipesIsLoading = state => state.recipeByCategorySlice.isLoading;\n// export const selectRecipesCountNumber = () => selectRecipesByCategoryName[0].totalCount;\n","import Skeleton from '@mui/material/Skeleton';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nconst styles = {\n  skeleton: {\n    width: '300px',\n    height: '400px',\n    margin: '10px',\n    BordeRadius: '6px',\n    backgroundColor: 'rgb(139, 170, 54)',\n    marginTop: '-50px',\n  },\n  row: {\n    display: 'flex',\n  },\n};\n\nexport const CategorySkeleton = () => {\n  const isMobile = useMediaQuery('(max-width:767px)');\n  const isTablet = useMediaQuery('(min-width:768px) and (max-width:1023px) ');\n  let skeletons = [];\n  if (isMobile) {\n    skeletons = [<Skeleton key={1} style={styles.skeleton} />];\n  } else if (isTablet) {\n    skeletons = [\n      <Skeleton key={1} style={styles.skeleton} />,\n      <Skeleton key={2} style={styles.skeleton} />,\n    ];\n  } else {\n    skeletons = [\n      <Skeleton key={1} style={styles.skeleton} />,\n      <Skeleton key={2} style={styles.skeleton} />,\n      <Skeleton key={3} style={styles.skeleton} />,\n      <Skeleton key={4} style={styles.skeleton} />,\n    ];\n  }\n\n  return (\n    <div>\n      <div style={styles.row}>{skeletons}</div>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport Container from 'components/constants/Container';\nimport CardRecipe from 'components/CardRecipe/CardRecipe';\nimport Box from '@mui/material/Box';\nimport { useParams } from 'react-router-dom';\nimport {\n  MyTabPanel,\n  CategoryContainer,\n  AnimatedLetter,\n  CategoryText,\n  CategoryTabs,\n  CategoryTab,\n} from './Category.styled';\nimport { Link } from './CategoriesMUI.styled';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { selectCategory } from '../../redux/recipes/selectors/selectCategoryList';\nimport {\n  selectRecipesByCategoryName,\n  selectRecipesIsLoading,\n} from '../../redux/recipes/selectors/selectRecipeByCategoryName';\nimport { getRecipesForMain } from '../../redux/recipes/selectors/selectCategoriesMain';\nimport getCategories from 'redux/recipes/operations/getCategory';\nimport getRecipesByCategory from 'redux/recipes/operations/getRecipesByCategory';\nimport {\n  CategoryDefaultSquare,\n  CategoryDefaultSquareСircle,\n  CategoryDefaultSquareSecond,\n} from './Category.styled';\n// import Loading from '../Loading/Loading';\nimport { PagePagination } from '../Pagination/Pagination';\nimport { getCatFood } from './Helpers/CheckCat';\nimport { CategorySkeleton } from './CategoryContentLoad';\n\nconst Categories = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const { categoryName: name } = useParams();\n  const dispatch = useDispatch();\n  const catFromMain = useSelector(getRecipesForMain)\n    ?.map(({ _id }) => _id)\n    ?.sort();\n  const categoriesFromFetch = useSelector(selectCategory);\n  const dishesElement = useSelector(selectRecipesByCategoryName);\n  const dishes = dishesElement;\n  const isLoad = useSelector(selectRecipesIsLoading);\n  const cardsPerPage = 8;\n  const totalPages = dishesElement.length > 0 ? dishesElement[0].totalCount : 8;\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [name]);\n\n  useEffect(() => {\n    if (catFromMain && catFromMain?.length > 0) {\n      return;\n    } else dispatch(getCategories());\n  }, [dispatch, catFromMain]);\n\n  useEffect(() => {\n    dispatch(getRecipesByCategory({ categoryName: name, page: currentPage }));\n  }, [name, dispatch, currentPage]);\n\n  const categories = getCatFood(catFromMain, categoriesFromFetch);\n\n  const categoryIndex = categories.findIndex(item => {\n    return item.toLowerCase() === name.toLowerCase();\n  });\n\n  const TabPanel = dishes => {\n    if (!dishes) {\n      return <div>Have not dishes in Category</div>;\n    }\n\n    return (\n      <>\n        {dishes.map(item => {\n          return (\n            <Link to={`/recipe/${item._id}`}>\n              <CardRecipe key={item._id} item={item} />\n            </Link>\n          );\n        })}\n      </>\n    );\n  };\n\n  const categoryText = 'Categories';\n\n  return (\n    <Container>\n      <>\n        <CategoryContainer>\n          <CategoryDefaultSquare />\n          <CategoryDefaultSquareСircle />\n          <CategoryDefaultSquareSecond />\n          <CategoryText>\n            {categoryText.split('').map((letter, index) => (\n              <AnimatedLetter key={index} index={index}>\n                {letter}\n              </AnimatedLetter>\n            ))}\n          </CategoryText>\n        </CategoryContainer>\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <CategoryTabs\n            value={categoryIndex}\n            aria-label=\"basic tabs example\"\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n          >\n            {categories.map(name => {\n              return (\n                <CategoryTab\n                  label={name}\n                  key={name}\n                  component={Link}\n                  to={`/categories/${name}`}\n                />\n              );\n            })}\n          </CategoryTabs>\n        </Box>\n        <MyTabPanel>\n          {isLoad ? <CategorySkeleton /> : TabPanel(dishes)}\n        </MyTabPanel>\n        {totalPages > 8 && (\n          <div\n            style={{\n              marginBottom: '200px',\n              '@media (min-width: 768px)': {\n                marginBottom: '100px',\n              },\n            }}\n          >\n            <PagePagination\n              totalPages={totalPages}\n              cardsPerPage={cardsPerPage}\n              currentPage={currentPage}\n              handlePageChange={handlePageChange}\n            />\n          </div>\n        )}\n      </>\n    </Container>\n  );\n};\n\nexport default Categories;\n","export const getCatFood = (arr1, arr2) => {\n  let categories = null;\n  if (arr1 && arr1?.length > 0) {\n    categories = arr1;\n    return categories;\n  } else categories = arr2;\n  return categories;\n};\n","import Categories from 'components/Categories';\n\nconst CategoriesPage = () => {\n  return <Categories />;\n};\nexport default CategoriesPage;\n","export const getStatusForMain = state =>\n  state.mainCategories.mainCategories.status;\n\nexport const getRecipesForMain = state =>\n  state.mainCategories.mainCategories.categoriesForMain;\n"],"names":["RecipeCard","styled","props","theme","colors","cardRecipe","bgbtn","categoriesPage","overlay","fontWeight","medium","fontSizes","m","textBtn","overlayHoverAfter","item","text","preview","title","createdAt","recipeDate","Date","getDate","res","src","alt","width","height","className","Link","NavLink","ContainerForAline","PaginationContainer","pagination","bg","bgActiveBtn","PageButton","active","bgAccent","Slider","PagePagination","cardsPerPage","totalPages","currentPage","handlePageChange","handlePageButtonClick","page","animateScroll","total","pageSize","current","onChange","prevIcon","nextIcon","itemRender","type","element","onClick","CategoryTabs","Tabs","backgroundColor","lineActive","CategoryDefaultSquare","DefaultSquare","CategoryDefaultSquareСircle","DefaultSquareСircle","CategoryDefaultSquareSecond","MyTabPanel","CategoryContainer","CategoryText","semiBold","xxl","xxxl","animate","keyframes","AnimatedLetter","index","CategoryTab","Tab","linkNameCategory","regular","linkNameCategoryHover","selectCategory","state","categories","selectRecipesByCategoryName","recipeByCategorySlice","recipeByCategory","selectRecipesIsLoading","isLoading","styles","skeleton","margin","BordeRadius","marginTop","row","display","CategorySkeleton","isMobile","useMediaQuery","isTablet","skeletons","Skeleton","style","useState","setCurrentPage","name","useParams","categoryName","dispatch","useDispatch","catFromMain","useSelector","getRecipesForMain","map","_id","sort","categoriesFromFetch","dishesElement","dishes","isLoad","length","totalCount","useEffect","getCategories","getRecipesByCategory","arr1","arr2","categoryIndex","findIndex","toLowerCase","Container","split","letter","Box","sx","borderBottom","borderColor","value","variant","scrollButtons","label","component","to","CardRecipe","TabPanel","marginBottom","getStatusForMain","mainCategories","status","categoriesForMain"],"sourceRoot":""}