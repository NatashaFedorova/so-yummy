{"version":3,"file":"static/js/592.0fa0089e.chunk.js","mappings":"qNAAaA,EAA0B,SAAAC,GAAK,OAAIA,EAAMC,SAASC,SAAnB,EAC/BC,EAAsB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,KAAnB,E,2DCExC,EAaIC,EAAQ,MAZVC,EADF,EACEA,mBACAC,EAFF,EAEEA,YACAC,EAHF,EAGEA,gBACAC,EAJF,EAIEA,eACAC,EALF,EAKEA,kBACAC,EANF,EAMEA,kBACAC,EAPF,EAOEA,cACAC,EARF,EAQEA,kBACAC,EATF,EASEA,sBACAC,EAVF,EAUEA,aACAC,EAXF,EAWEA,aACAC,EAZF,EAYEA,mBAuCF,EApCqB,SAAC,GAEf,IAAD,IADJC,eAAkBC,EACd,EADcA,IAAKC,EACnB,EADmBA,MAAOC,EAC1B,EAD0BA,QAASC,EACnC,EADmCA,YAAaC,EAChD,EADgDA,KAE9CC,GAAWC,EAAAA,EAAAA,eAEXC,EAAW,mCAAG,8FACZF,GAASG,EAAAA,EAAAA,IAAeR,IADZ,uBAEZK,GAASI,EAAAA,EAAAA,OAFG,2CAAH,qDAKjB,OACE,UAACtB,EAAD,YACE,SAACC,EAAD,CAAasB,IAAKR,EAASS,IAAKV,EAAOW,MAAO,IAAKC,OAAQ,OAC3D,UAACxB,EAAD,YACE,UAACC,EAAD,YACE,SAACG,EAAD,UAAgBQ,KAChB,SAACP,EAAD,CACEoB,KAAM,SACNb,MAAO,SACPc,QAASR,EAHX,UAKE,SAACZ,EAAD,UAGJ,SAACJ,EAAD,WACE,SAACK,EAAD,UAAeO,OAEjB,UAACX,EAAD,YACE,UAACK,EAAD,WAAeO,EAAf,WACA,SAACN,EAAD,CAAoBkB,GAAE,kBAAahB,GAAnC,gCAKT,EClCD,EAZqB,WACnB,IAAMf,GAAQgC,EAAAA,EAAAA,aAAYjC,GAE1B,OACE,SAAC,IAAD,UACGC,EAAMiC,KAAI,gBAAGlB,EAAH,EAAGA,IAAKC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,YAAagB,EAArC,EAAqCA,aAAcf,EAAnD,EAAmDA,KAAnD,OACT,SAAC,EAAD,CAAwBL,eAAgB,CAAEC,IAAAA,EAAKC,MAAAA,EAAOC,QAAAA,EAASC,YAAAA,EAAagB,aAAAA,EAAcf,KAAAA,IAAvEJ,EADV,KAKhB,E,oBC6DD,EAzDqB,WACnB,IAAMK,GAAWC,EAAAA,EAAAA,eACXvB,GAAYkC,EAAAA,EAAAA,aAAYrC,GACxBwC,GAAgBH,EAAAA,EAAAA,aAAYjC,GAClC,GAA4BqC,EAAAA,EAAAA,UAAS,GAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAsCF,EAAAA,EAAAA,UAAS,GAA/C,eAAOG,EAAP,KAAoBC,EAApB,KAEMC,GAAuBC,QAAQP,EAAcQ,QAC7CC,EAAaT,EAAcQ,OAAS,EAAIR,EAAc,GAAGU,WAAa,EAc5E,OARAC,EAAAA,EAAAA,YAAU,WACJT,EACFC,EAAU,GAGZlB,GAASI,EAAAA,EAAAA,IAAYe,GACtB,GAAE,CAACnB,EAAUmB,EAAaF,EAAQC,KAGjC,gCACGxC,IAAa,SAACiD,EAAA,EAAD,KACd,SAAC,KAAD,WACE,UAAC,IAAD,YACE,SAACC,EAAA,EAAD,CAAWhC,MAAO,cACjByB,GACC,iCACE,SAAC,KAAD,KACA,UAAC,KAAD,gFAEK,KACH,SAAC,KAAD,CAAqBV,GAAG,mBAAxB,wBAEuB,IALzB,cAUF,iCACE,SAAC,EAAD,KACA,SAAC,IAAD,CACEa,WAAYA,EACZK,aAvCO,EAwCPV,YAAaA,EACbW,iBArCW,SAAAC,GACvBX,EAAeW,EAChB,cA2CF,C","sources":["redux/favorite/favoriteSelectors.js","components/FavoriteItem/FavoriteItem.jsx","components/FavoriteList/FavoriteList.jsx","page/FavoritePage.jsx"],"sourcesContent":["export const selectFavoriteIsLoading = state => state.favorite.isLoading;\nexport const selectFavoriteItems = state => state.favorite.items;\nexport const selectFavoriteStatus = state => state.favorite.status;","import { useDispatch } from 'react-redux';\nimport { deleteFavorite, getFavorite } from 'redux/favorite/favoriteOperation';\n\nconst {\n  StyledFavoriteItem,\n  FavoriteImg,\n  FavoriteBoxWrap,\n  FavoriteBoxTop,\n  FavoriteBoxCenter,\n  FavoriteBoxBottom,\n  FavoriteTitle,\n  FavoriteBtnDelete,\n  FavoriteIconBtnDelete ,\n  FavoriteDesc,\n  FavoriteTime,\n  FavoriteBtnDetails,\n} = require('./FavoriteItem.styled');\n\nconst FavoriteItem = ({\n  favoriteRecipe: { _id, title, preview, description, time },\n}) => {\n  const dispatch = useDispatch();\n\n  const handleClick = async () => {\n    await dispatch(deleteFavorite(_id));\n    await dispatch(getFavorite());\n  };\n\n  return (\n    <StyledFavoriteItem>\n      <FavoriteImg src={preview} alt={title} width={124} height={124} />\n      <FavoriteBoxWrap>\n        <FavoriteBoxTop>\n          <FavoriteTitle>{title}</FavoriteTitle>\n          <FavoriteBtnDelete\n            type={'button'}\n            title={'Delete'}\n            onClick={handleClick}\n          >\n            <FavoriteIconBtnDelete  />\n          </FavoriteBtnDelete>\n        </FavoriteBoxTop>\n        <FavoriteBoxCenter>\n          <FavoriteDesc>{description}</FavoriteDesc>\n        </FavoriteBoxCenter>\n        <FavoriteBoxBottom>\n          <FavoriteTime>{time} min</FavoriteTime>\n          <FavoriteBtnDetails to={`/recipe/${_id}`}>See recipe</FavoriteBtnDetails>\n        </FavoriteBoxBottom>\n      </FavoriteBoxWrap>\n    </StyledFavoriteItem>\n  );\n};\n\nexport default FavoriteItem;\n","import { useSelector } from 'react-redux';\n\nimport { selectFavoriteItems } from 'redux/favorite/favoriteSelectors';\nimport { StyledFavoriteList } from './FavoriteList.styled';\nimport FavoriteItem from 'components/FavoriteItem/FavoriteItem';\n\nconst FavoriteList = () => {\n  const items = useSelector(selectFavoriteItems);\n\n  return (\n    <StyledFavoriteList >\n      {items.map(({ _id, title, preview, description, instructions, time }) => (\n        <FavoriteItem key={_id} favoriteRecipe={{ _id, title, preview, description, instructions, time }} />\n      ))}\n    </StyledFavoriteList>\n  );\n};\n\nexport default FavoriteList;","import { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Container from 'components/constants/Container/Container.styled';\nimport Loading from 'components/Loading/Loading';\nimport {\n  FavoriteSection,\n  FavoritePlugImg,\n  FavoritePlugText,\n  FavoritePlugNavLink,\n} from 'components/Favorite/Favorite.styled';\nimport FavoriteList from 'components/FavoriteList/FavoriteList';\nimport { getFavorite } from 'redux/favorite/favoriteOperation';\nimport {\n  selectFavoriteIsLoading,\n  selectFavoriteItems,\n} from 'redux/favorite/favoriteSelectors';\nimport { PagePagination } from 'components/Pagination/Pagination';\nimport MainTitle from 'components/MainTitle/MainTitle';\n\nconst FavoritePage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectFavoriteIsLoading);\n  const favoriteItems = useSelector(selectFavoriteItems);\n  const [render, setRender] = useState(1);\n  const [currentPage, setCurrentPage] = useState(1);\n  const cardsPerPage = 4;\n  const isFavoriteListEmpty = !Boolean(favoriteItems.length);\n  const totalPages = favoriteItems.length > 0 ? favoriteItems[0].totalCount : 1;\n\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n\n  useEffect(() => {\n    if (render) {\n      setRender(0);\n      return;\n    }\n    dispatch(getFavorite(currentPage));\n  }, [dispatch, currentPage, render, setRender]);\n\n  return (\n    <>\n      {isLoading && <Loading />}\n      <FavoriteSection>\n        <Container>\n          <MainTitle title={'Favorites'} />\n          {isFavoriteListEmpty ? (\n            <>\n              <FavoritePlugImg />\n              <FavoritePlugText>\n                Favorite list is empty, but you can choose your favorite recipe\n                on{' '}\n                <FavoritePlugNavLink to=\"/categories/beef\">\n                  Categories\n                </FavoritePlugNavLink>{' '}\n                page\n              </FavoritePlugText>\n            </>\n          ) : (\n            <>\n              <FavoriteList />\n              <PagePagination\n                totalPages={totalPages}\n                cardsPerPage={cardsPerPage}\n                currentPage={currentPage}\n                handlePageChange={handlePageChange}\n              />\n            </>\n          )}\n        </Container>\n      </FavoriteSection>\n    </>\n  );\n};\n\nexport default FavoritePage;\n\n// {/* <MainTitle title={\"Favorites\"} paddingBottom={400} /> */}\n"],"names":["selectFavoriteIsLoading","state","favorite","isLoading","selectFavoriteItems","items","require","StyledFavoriteItem","FavoriteImg","FavoriteBoxWrap","FavoriteBoxTop","FavoriteBoxCenter","FavoriteBoxBottom","FavoriteTitle","FavoriteBtnDelete","FavoriteIconBtnDelete","FavoriteDesc","FavoriteTime","FavoriteBtnDetails","favoriteRecipe","_id","title","preview","description","time","dispatch","useDispatch","handleClick","deleteFavorite","getFavorite","src","alt","width","height","type","onClick","to","useSelector","map","instructions","favoriteItems","useState","render","setRender","currentPage","setCurrentPage","isFavoriteListEmpty","Boolean","length","totalPages","totalCount","useEffect","Loading","MainTitle","cardsPerPage","handlePageChange","page"],"sourceRoot":""}